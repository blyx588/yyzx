<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.health.system.mapper.DoctorTreatment1Mapper">
    
    <resultMap type="DoctorTreatment1" id="DoctorTreatment1Result">
        <result property="id"    column="id"    />
        <result property="itemId"    column="item_id"    />
        <result property="registerId"    column="register_id"    />
        <result property="treatmentName"    column="treatment_name"    />
        <result property="itemCode"    column="item_code"    />
        <result property="exclusionContent"    column="exclusion_content"    />
        <result property="unit"    column="unit"    />
        <result property="price"    column="price"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectDoctorTreatment1Vo">
        select id, item_id, register_id, treatment_name, item_code, exclusion_content, unit, price, create_by, create_time, update_by, update_time from doctor_treatment1
    </sql>

    <select id="selectDoctorTreatment1List" parameterType="DoctorTreatment1" resultMap="DoctorTreatment1Result">
        <include refid="selectDoctorTreatment1Vo"/>
        <where>  
            <if test="itemId != null "> and item_id = #{itemId}</if>
            <if test="registerId != null "> and register_id = #{registerId}</if>
            <if test="treatmentName != null  and treatmentName != ''"> and treatment_name like concat('%', #{treatmentName}, '%')</if>
            <if test="itemCode != null  and itemCode != ''"> and item_code = #{itemCode}</if>
            <if test="exclusionContent != null  and exclusionContent != ''"> and exclusion_content = #{exclusionContent}</if>
            <if test="unit != null  and unit != ''"> and unit = #{unit}</if>
            <if test="price != null "> and price = #{price}</if>
        </where>
    </select>
    
    <select id="selectDoctorTreatment1ById" parameterType="Long" resultMap="DoctorTreatment1Result">
        <include refid="selectDoctorTreatment1Vo"/>
        where id = #{id}
    </select>

    <select id="selectDoctorTreatment1ListByRegisterId" parameterType="long" resultMap="DoctorTreatment1Result">
        SELECT id, item_id, register_id, treatment_name, item_code, exclusion_content, unit, price, create_by, create_time, update_by, update_time
        FROM doctor_treatment1 WHERE register_id = #{registerId}
    </select>

    <insert id="insertDoctorTreatment1" parameterType="DoctorTreatment1" useGeneratedKeys="true" keyProperty="id">
        insert into doctor_treatment1
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="itemId != null">item_id,</if>
            <if test="registerId != null">register_id,</if>
            <if test="treatmentName != null and treatmentName != ''">treatment_name,</if>
            <if test="itemCode != null">item_code,</if>
            <if test="exclusionContent != null">exclusion_content,</if>
            <if test="unit != null">unit,</if>
            <if test="price != null">price,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="itemId != null">#{itemId},</if>
            <if test="registerId != null">#{registerId},</if>
            <if test="treatmentName != null and treatmentName != ''">#{treatmentName},</if>
            <if test="itemCode != null">#{itemCode},</if>
            <if test="exclusionContent != null">#{exclusionContent},</if>
            <if test="unit != null">#{unit},</if>
            <if test="price != null">#{price},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateDoctorTreatment1" parameterType="DoctorTreatment1">
        update doctor_treatment1
        <trim prefix="SET" suffixOverrides=",">
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="registerId != null">register_id = #{registerId},</if>
            <if test="treatmentName != null and treatmentName != ''">treatment_name = #{treatmentName},</if>
            <if test="itemCode != null">item_code = #{itemCode},</if>
            <if test="exclusionContent != null">exclusion_content = #{exclusionContent},</if>
            <if test="unit != null">unit = #{unit},</if>
            <if test="price != null">price = #{price},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDoctorTreatment1ById" parameterType="Long">
        delete from doctor_treatment1 where id = #{id}
    </delete>

    <delete id="deleteDoctorTreatment1ByIds" parameterType="String">
        delete from doctor_treatment1 where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>